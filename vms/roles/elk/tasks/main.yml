---
- name: Create directory for app
  file:
    path: "{{app_dir}}"
    state: directory
    mode: "0755"

- name: Copy .env
  template:
    src: templates/.env.j2
    dest: "{{app_dir}}/.env"
    mode: "0755"

- name: Copy credentials file
  template:
    src: templates/credentials.j2
    dest: "{{app_dir}}/credentials"
    mode: "0755"

- name: Copy docker compose file
  template:
    src: templates/docker-compose.yml.j2
    dest: "{{app_dir}}/docker-compose.yml"
    group: www-data
    mode: "0440"

- name: Copy logstash config file
  template:
    src: templates/logstash.conf
    dest: "{{app_dir}}/logstash.conf"
    group: www-data
    mode: "0440"

- name: Create start.sh
  become: true
  template:
    src: templates/start.sh.j2
    dest: "{{app_dir}}/start.sh"
    owner: root
    mode: "0755"

- name: Create systemd service
  become: true
  template:
    src: templates/service.j2
    dest: /etc/systemd/system/elk.service
    owner: root
    mode: "0644"

- name: Create startup.sh
  become: true
  template:
    src: templates/startup.sh.j2
    dest: "{{app_dir}}/startup.sh"
    owner: root
    mode: "0755"

- name: Create systemd service
  become: true
  template:
    src: templates/startup.service.j2
    dest: /etc/systemd/system/startup.service
    owner: root
    mode: "0644"

- name: Enable service
  systemd:
    name: elk
    enabled: yes

- name: Enable service
  systemd:
    name: startup
    enabled: yes

- name: Build & pull services
  become: yes
  docker_compose:
    project_src: "{{app_dir}}"
    build: yes
    state: present
    stopped: yes

- name: Create a network
  become: true
  docker_network:
    name: elastic
# - name: deploy Docker Compose stack
#   become: true
#   community.docker.docker_compose:
#     project_src: "{{app_dir}}"
#     files:
#       - docker-compose.yml
